Função: insertAsync

Assinatura: insertAsync(instance: any, onConfig?: any): Promise

Arquivo fonte: insertAsync.js

Descrição: A função insertAsync realiza a chamada da função insertObject no formato de Promise. O parâmetro instance da função insertAsync será passado
para o parâmetro instance da função insertObject, assim como o parâmetro opcional onConfig da função insertAsync será passado para o parâmetro onConfig 
da função insertObject. Para mais detalhes acerca dos parâmetros instance e onConfig, consulte a documentação de insertObject. Caso a função insertObject 
consiga ser executada sem erros, a Promise de insertAsync será resolvida, recebendo o objeto inserido na execução de insertObject. Caso algum erro ocorra
na execução de insertObject, a Promise de insertAsync será rejeitada, recebendo o erro ocorrido. 

Cuidados para o uso: O parâmetro instance e o parâmetro onConfig de insertAsync são os mesmo de insertObject. Consulte a documentação de insertObject para 
mais detalhes acerca destes parâmetros. 
 
Exemplos de uso:

1)
--------------------------------------------------------------------------------------------------------------------------------------------------
const orm = require('posting')

class Teste extends orm.Posting
{
    constructor(id = null, seq = null, campo = null)
    {
        super()
        this.id = id
        this.seq = seq
        this.campo = campo
        this.setAuto('id', 'seq')
    }
}

orm.insertAsync(new Teste(null, null, 'Mauro'))
    .then(resp => console.log(resp))
    .catch(error => console.log(error)) // Query gerada: insert into teste (campo) values ('Mauro') returning id, seq
// Os valores de retorno da query são usados para preencher o objeto antes de devolvê-lo à callback de insertObject
// Neste caso, mesmo que os valores de id e seq do objeto estivessem previamente preenchidos, seriam desonsiderados e substituídos pelo retorno da query
--------------------------------------------------------------------------------------------------------------------------------------------------
